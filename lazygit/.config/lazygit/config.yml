# Config relating to the Lazygit UI
gui:
  theme:
    activeBorderColor:
      - "#89b4fa"
      - bold
    inactiveBorderColor:
      - "#a6adc8"
    optionsTextColor:
      - "#89b4fa"
    selectedLineBgColor:
      - "#313244"
    cherryPickedCommitBgColor:
      - "#45475a"
    cherryPickedCommitFgColor:
      - "#89b4fa"
    unstagedChangesColor:
      - "#f38ba8"
    defaultFgColor:
      - "#cdd6f4"
    searchingActiveBorderColor:
      - "#f9e2af"

customCommands:
  - key: "E"
    description: "Add empty commit"
    context: "global"
    prompts:
      - type: "input"
        title: "Empty commit message"
        key: "Message"
        initialValue: ""
    command: 'git commit --allow-empty -m "{{.Form.Message}}"'
    loadingText: "Committing empty commit..."
  # retrieved from: https://github.com/jesseduffield/lazygit/wiki/Custom-Commands-Compendium#conventional-commit
  - key: "<c-c>"
    context: "global"
    description: "Create new conventional commit"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
      - type: "input"
        title: "Scope"
        key: "Scope"
        initialValue: ""
      - type: "input"
        title: "message"
        key: "Message"
        initialValue: ""
        body: "A short, imperative tense description of the change"
      - type: "input"
        title: "Body"
        key: "Body"
        initialValue: ""
        body: "A longer description of the change. Use '|' to break new lines"
      - type: "input"
        title: "Ticket"
        key: "Ticket"
        initialValue: ""
        body: "The ticket number associated with the change (e.g. JIRA-123 or #123)"
      - type: "menu"
        title: "Versioning (SemVer)"
        key: "Versioning"
        options:
          - name: "none"
            description: "No versioning"
            value: ""
          - name: "patch"
            description: "Bug fixes"
            value: "+patch"
          - name: "minor"
            description: "New features"
            value: "+minor"
          - name: "major"
            description: "Breaking changes"
            value: "+major"
      - type: "confirm"
        key: "Confirm"
        title: "Commit"
        body: "Are you sure you want to commit?"
    command: "git commit --allow-empty --message '{{.Form.Type}}{{ if .Form.Scope }}({{ .Form.Scope }}){{ end }}: {{.Form.Message}} {{if .Form.Body}}\n\n{{.Form.Body}}{{if .Form.Ticket}}\n\n{{.Form.Ticket}}{{else}}{{if .Form.Versioning}}\n\n{{.Form.Versioning}}{{end}}{{end}}{{if .Form.Ticket}}{{if .Form.Versioning}}\n{{.Form.Versioning}}{{end}}{{end}}{{else}}{{if .Form.Ticket}}\n\nFix {{.Form.Ticket}}{{if .Form.Versioning}}\n{{.Form.Versioning}}{{end}}{{else}}{{if .Form.Versioning}}\n\n{{.Form.Versioning}}{{end}}{{end}}{{end}}'"
    loadingText: "Creating conventional commit..."

  - key: "n"
    context: "localBranches"
    prompts:
      - type: "menu"
        title: "What kind of branch is it?"
        key: "BranchType"
        options:
          - name: "none"
            description: "a regular branch"
            value: ""
          - name: "feature"
            description: "a feature branch"
            value: "feature"
          - name: "bugfix"
            description: "a hotfix branch"
            value: "bugfix"
          - name: "hotfix"
            description: "a hotfix branch"
            value: "hotfix"
          - name: "release"
            description: "a release branch"
            value: "release"
      - type: "input"
        title: "What is the new branch name?"
        key: "BranchName"
        initialValue: ""
    command: "git {{if .Form.BranchType}}checkout -b {{.Form.BranchType}}/$(echo {{.Form.BranchName}} | sed 's/ /-/g'){{else}}checkout -b $(echo {{.Form.BranchName}} | sed 's/ /-/g'){{end}}"
    loadingText: "Creating branch"
